type RequestHatchLog @entity {
  id: ID! # txHash + logIndex
  txHash: Bytes!
  user: Bytes!
  tokenId: BigInt!
  requestId: BigInt!
  amount: BigInt!
  referrer: Bytes!
  timestamp: BigInt!
}

type Lottery @entity {
  id: ID! # round
  totalTickets: BigInt!
  round: BigInt!
}

type UserLottery @entity {
  id: ID! # userAddress + round
  user: Bytes!
  round: BigInt!
  tickets: BigInt!
}

type Referral @entity {
  id: ID! # userAddress + referralAddress
  user: Bytes!
  referrer: Bytes!
}

type GeneratedVolume @entity {
  id: ID! # user
  user: Bytes!
  amountAsUser: BigInt!
  amountAsReferrer: BigInt!
  amountAsGrandparent: BigInt!
  lastUpdate: BigInt!
}

type WeeklyGeneratedVolume @entity {
  id: ID! # user - round (epoch)
  user: Bytes!
  amountAsUser: BigInt!
  amountAsReferrer: BigInt!
  amountAsGrandparent: BigInt!
  lastUpdate: BigInt!
  epoch: BigInt!
}

type DailyGeneratedVolume @entity {
  id: ID! # user - round (day)
  user: Bytes!
  amountAsUser: BigInt!
  amountAsReferrer: BigInt!
  amountAsGrandparent: BigInt!
  lastUpdate: BigInt!
  day: BigInt!
}

type AccumulativeGeneratedVolume @entity {
  id: ID! # userAddress + timestamp
  user: Bytes!
  amountAsUser: BigInt!
  amountAsReferrer: BigInt!
  amountAsGrandparent: BigInt!
  lastUpdate: BigInt!
}

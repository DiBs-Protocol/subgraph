type AccumulativeTokenBalance @entity {
  id: ID! # tokenAddress + userAddress
  user: Bytes!
  token: Bytes!
  amount: BigInt!
  lastUpdate: BigInt!
}

type SwapLog @entity {
  id: ID! # txHash + logIndex
  txHash: Bytes!
  logIndex: BigInt!
  user: Bytes!
  tokenIn: Bytes!
  amountIn: BigInt!
  round: BigInt!
  stable: Boolean!
  timestamp: BigInt!
}

type Lottery @entity {
  id: ID! # round
  totalTikets: BigInt!
  round: BigInt!
}

type UserLottery @entity {
  id: ID! # userAddress + round
  user: Bytes!
  round: BigInt!
  tickets: BigInt!
}

type Referral @entity {
  id: ID! # userAddress + referralAddress
  user: Bytes!
  referrer: Bytes!
}

type GeneratedVolume @entity {
  id: ID! # tokenAddress
  user: Bytes!
  amountAsUser: BigInt!
  amountAsReferrer: BigInt!
  amountAsGrandparent: BigInt!
  lastUpdate: BigInt!
}

type AccumulativeGeneratedVolume @entity {
  id: ID! # userAddress + timestamp
  user: Bytes!
  amountAsUser: BigInt!
  amountAsReferrer: BigInt!
  amountAsGrandparent: BigInt!
  lastUpdate: BigInt!
}
